plugins {
    id "com.android.application" version "8.6.0" // Keep your existing AGP version
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def keystorePropertiesFile = file("C:/Users/Dan/Devs/Clips-style2.0/android/key.properties") // Absolute path
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    // Added error handling similar to the example
    println("Keystore properties file not found at: ${keystorePropertiesFile.absolutePath}")
    throw new GradleException("Keystore properties file not found. Please ensure it exists at the specified path.")
}
// >>>>> End of code to load properties <<<<<

android {
    namespace = "com.Breta.clipsandstyles_2" // Updated namespace
    compileSdk = flutter.compileSdkVersion // Use Flutter's settings
    ndkVersion = flutter.ndkVersion     // Use Flutter's settings

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true // Keep this

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

   
    signingConfigs {
        release {
            // Read alias and passwords from key.properties
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
            // Manually specify the ABSOLUTE path to your keystore file
            // Ensure this path and filename (my-release-key-v2.jks) are correct
            storeFile file('C:/Users/Dan/Devs/Clips-style2.0/new-upload-keystore.jks') // Absolute path
        }
    }
    // >>>>> End of signingConfigs block <<<<<

    defaultConfig {
        // Keep your defaultConfig settings
        applicationId = "com.Breta.clipsandstyles_2"
        multiDexEnabled true
        minSdkVersion 23 // Keep your minSdkVersion
        targetSdk = flutter.targetSdkVersion // Use Flutter's targetSdkVersion
        versionCode = 27// Keep your versionCode (or use local.properties logic if preferred)
        versionName = "1.27"
    }

    buildTypes {
        release {
            // Ensure signingConfig is set to release
            signingConfig = signingConfigs.release

            // Keep other release settings if you had them
            // minifyEnabled false
            // shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

// Keep your dependencies block
dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    // Add other dependencies if needed
}
